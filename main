import datetime
import smtplib
import webbrowser
import pyjokes
import pyttsx3
import pywhatkit
import speech_recognition as sr
import wikipedia
from pyttsx3 import voice

r = sr.Recognizer()
engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
engine.setProperty('voices', voices[0].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour >= 0 and hour < 12:
        speak("Good Morning!")

    elif hour >= 12 and hour < 18:
        speak("Good Afternoon!")

    else:
        speak("Good Evening!")

    speak("I am Shaavs, Your Assistant. Please tell me how may I help you")


def takeCommand():

    with sr.Microphone() as source:

        print("Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("Recognizing...")
        query = r.recognize_google(voice, language='en-in')
        query = query.lower()
        if 'Shaavs' in query:
            query = query.replace('Shaavs', '')
        print(f"User said: {query}\n")

    except Exception as e:
        # print(e)
        print("Say that again please...")
        return "None"
    return query


def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('youremail@gmail.com', 'your-password')
    server.sendmail('youremail@gmail.com', to, content)
    server.close()


if __name__ == "__main__":
    wishMe()
    while True:
        if 1:
            query = takeCommand().lower()

            # Logic for executing tasks based on query
            if 'tell me about' in query:
                look_for = query.replace('tell me about', '')
                info = wikipedia.summary(look_for, 1)
                print(info)
                speak(info)
            elif 'open youtube' in query:
                webbrowser.open("youtube.com")

            elif 'open google' in query:
                webbrowser.open("google.com")

            elif 'open stackoverflow' in query:
                webbrowser.open("stackoverflow.com")

            elif 'open classroom' in query:
                webbrowser.open("classroom.google.com")

            elif 'play' in query:
                song = query.replace('play', '')
                speak('playing ' + song)
                pywhatkit.playonyt(song)

            elif 'joke' in query:
                speak(pyjokes.get_joke())

            elif 'tell the time' in query:
                strTime = datetime.datetime.now().strftime("%H:%M:%S")
                speak(f"Sir, the time is {strTime}")

            elif 'email to him' in query:
                try:
                    speak("What should I say?")
                    content = takeCommand()
                    to = "him@gmail.com"
                    sendEmail(to, content)
                    speak("Email has been sent!")
                except Exception as e:
                    print(e)
                    speak("Sorry, I am not able to send this email")
